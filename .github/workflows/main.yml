name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        verify_flag: ['\"\"', '\"--vac\"', '\"--vac --horn-bmc-solver=smt-y2\"', '\"--cex\"', '\"--cex --horn-bmc-solver=smt-y2\"']
        include:
          - verify_flag: '\"\"'
            EXCLUDE_TESTS: '\"\"'
          - verify_flag: '\"--vac\"'
            EXCLUDE_TESTS: '\"(ring_buffer_clean_up_unsat_test)\"'
          - verify_flag: '\"--vac --horn-bmc-solver=smt-y2\"'
            EXCLUDE_TESTS: '\"\"'
          - verify_flag: '\"--cex\"'
            EXCLUDE_TESTS: '\"(byte_buf_write_from_whole_string_unsat_test|linked_list_pop_back_unsat_test|linked_list_swap_contents_unsat_test|string_eq_unsat_test|ring_buffer_clean_up_unsat_test|string_compare_unsat_test)\"'
          - verify_flag: '\"--cex --horn-bmc-solver=smt-y2\"'
            EXCLUDE_TESTS: '\"\"'
       
    steps:
      - name: Checkout 
        uses: actions/checkout@master

      - name: Get type
        id: type
        run: echo ::set-output name=type::$(echo ${{ matrix.verify_flag }} | cut -c4-7)

      - name: Get exclude test
        id: exclude_files
        run: echo ::set-output name=exclude_files::$(cat "blacklist.${{steps.type.outputs.type}}.txt")

      - name: Test output
        run: echo ${{ steps.exclude_files.outputs.exclude_files }}
     
      - name: Docker 
        run: docker build -t verify-c-common . --file docker/verify-c-common.Dockerfile
        
      - name: Get number of Cores
        id: cores
        run: echo "::set-output name=num_cores::$(nproc --all)"
        
      - name: Run Tests 
        run: docker run -t verify-c-common /bin/bash -c "cd build && env VERIFY_FLAGS=${{ matrix.verify_flag }} ctest -j ${{steps.cores.outputs.num_cores}} --timeout 2000 -E ${{matrix.EXCLUDE_TESTS}}"
  
